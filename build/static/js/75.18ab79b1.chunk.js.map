{"version":3,"sources":["../../react_components/index.js","../../react_components/PaginationBoxView.js","../../react_components/PageView.js","../../react_components/BreakView.js","../node_modules/react-bootstrap/esm/Table.js","app/views/charts/echarts/LineChart4.jsx","app/views/charts/echarts/Doughnut.jsx","app/views/dashboard/dashboard2/Dashboard2.jsx"],"names":["PaginationBoxView","evt","selected","pageCount","selectedItem","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","index","leftSide","rightSide","page","breakView","createPageView","key","onClick","initialSelected","props","this","initialPage","disableInitialCallback","extraAriaContext","console","prevProps","forcePage","forwardJump","backwardJump","pageIndex","hrefBuilder","state","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","handlePageSelected","bind","href","ariaLabel","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","className","tabIndex","role","onKeyPress","aria-disabled","Component","propTypes","PropTypes","onPageChange","func","defaultProps","PageView","ariaCurrent","aria-label","aria-current","isRequired","BreakView","Table","React","forwardRef","_ref","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","LineChart4","height","option","echartOptions","lineSplitNoAxis","grid","top","left","right","bottom","series","data","lineStyle","color","width","lineShadow","show","type","smooth","itemStyle","borderColor","style","DoughnutChart","defaultOptions","legend","pieRing","pieLabelCenterHover","name","value","Dashboard2","cardList","icon","subtitle","title","topAuthorList","description","photoUrl","lastMonthSummery","status","newUserList","email","topProductList","date","price","handlePageClick","pageNumber","offset","Math","ceil","perPage","setState","log","getUserStatusClass","getStatusTextColor","routeSegments","path","map","card","SimpleCard","scope","item","Doughnut","author","classList","length","src","alt","id","user","subContainerClassName","product"],"mappings":"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","file":"static/js/75.18ab79b1.chunk.js","sourcesContent":["import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = props => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      props.page +\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof props.activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        onClick={onClick}\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={onClick}\n      >\n        {props.page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = props => {\n  const { breakLabel, breakClassName, breakLinkClassName, onClick } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={onClick}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { echartOptions } from \"@gull\";\nconst LineChart4 = ({ height }) => {\n  const option = {\n    ...echartOptions.lineSplitNoAxis,\n    grid: {\n      top: 15,\n      left: 35,\n      right: 35,\n      bottom: 0\n    },\n    series: [\n      {\n        data: [40, 80, 20, 90, 30, 80, 40],\n        lineStyle: {\n          color: \"rgba(102, 51, 153, 0.8)\",\n          width: 3,\n          ...echartOptions.lineShadow\n        },\n        label: { show: true, color: \"#212121\" },\n        type: \"line\",\n        smooth: true,\n        itemStyle: {\n          borderColor: \"rgba(102, 51, 153, 1)\"\n        }\n      }\n    ]\n  };\n\n  return <ReactEcharts style={{ height: height }} option={option} />;\n};\n\nexport default LineChart4;\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { echartOptions } from \"@gull\";\n\nconst DoughnutChart = ({ height }) => {\n  const option = {\n    ...echartOptions.defaultOptions,\n    legend: {\n      show: true,\n      bottom: 0\n    },\n    series: [\n      {\n        type: \"pie\",\n        ...echartOptions.pieRing,\n\n        label: echartOptions.pieLabelCenterHover,\n        data: [\n          {\n            name: \"Completed\",\n            value: 80,\n            itemStyle: {\n              color: \"#663399\"\n            }\n          },\n          {\n            name: \"Pending\",\n            value: 20,\n            itemStyle: {\n              color: \"#ced4da\"\n            }\n          }\n        ]\n      }\n    ]\n  };\n\n  return <ReactEcharts style={{ height: height }} option={option} />;\n};\n\nexport default DoughnutChart;\n","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport LineChart4 from \"app/views/charts/echarts/LineChart4\";\nimport DoughnutChart from \"app/views/charts/echarts/Doughnut\";\nimport { Table } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\nimport { classList } from \"@utils\";\n\nclass Dashboard2 extends Component {\n  state = {\n    cardList: [\n      {\n        icon: \"i-Data-Download\",\n        subtitle: \"Today's Upload\",\n        title: \"21\"\n      },\n      {\n        icon: \"i-Add-User\",\n        subtitle: \"new users\",\n        title: \"53\"\n      },\n      {\n        icon: \"i-Money-2\",\n        subtitle: \"total sales\",\n        title: \"4031\"\n      },\n      {\n        icon: \"i-Money-2\",\n        title: \"4031\"\n      },\n      {\n        icon: \"i-Gear\",\n        title: \"4031\"\n      },\n      {\n        icon: \"i-Bell\",\n        title: \"4031\"\n      }\n    ],\n    topAuthorList: [\n      {\n        name: \"David Hopkins\",\n        description: \"Lorem ipsum dolor sit amet consectetur.\",\n        photoUrl: \"/assets/images/faces/2.jpg\"\n      },\n      {\n        name: \"James Mitchell\",\n        description: \"Lorem ipsum dolor sit amet consectetur.\",\n        photoUrl: \"/assets/images/faces/3.jpg\"\n      },\n      {\n        name: \"Jessica Mitchell\",\n        description: \"Lorem ipsum dolor sit amet consectetur.\",\n        photoUrl: \"/assets/images/faces/4.jpg\"\n      }\n    ],\n    lastMonthSummery: [\n      {\n        name: \"Portable Speaker\",\n        status: \"+ $1200\"\n      },\n      {\n        name: \"Portable Headphe\",\n        status: \"In Stock\"\n      },\n      {\n        name: \"Speaker\",\n        status: \"Out of Stock\"\n      },\n      {\n        name: \"Watch\",\n        status: \"Low Stock\"\n      }\n    ],\n    newUserList: [\n      {\n        name: \"David Hopkins\",\n        email: \"hopkins@gmail.com\",\n        photoUrl: \"/assets/images/faces/2.jpg\",\n        status: \"active\"\n      },\n      {\n        name: \"James Mitchell\",\n        email: \"petter@gmail.com\",\n        photoUrl: \"/assets/images/faces/3.jpg\",\n        status: \"pending\"\n      },\n      {\n        name: \"Jessica Mitchell\",\n        email: \"johndoe@gmail.com\",\n        photoUrl: \"/assets/images/faces/4.jpg\",\n        status: \"inactive\"\n      }\n    ],\n    topProductList: [\n      {\n        name: \"Watch\",\n        date: \"12-10-2019\",\n        price: 30,\n        status: \"delivered\"\n      },\n      {\n        name: \"Iphone\",\n        date: \"24-10-2019\",\n        price: 350,\n        status: \"pending\"\n      },\n      {\n        name: \"Headphone\",\n        date: \"11-11-2019\",\n        price: 10,\n        status: \"not delivered\"\n      }\n    ]\n  };\n\n  handlePageClick = data => {\n    let pageNumber = data.selected;\n    let offset = Math.ceil(pageNumber * this.props.perPage);\n    this.setState({ offset: offset }, () => {\n      console.log(data);\n    });\n  };\n\n  getUserStatusClass = status => {\n    switch (status) {\n      case \"active\":\n        return \"badge-success\";\n      case \"delivered\":\n        return \"badge-success\";\n      case \"inactive\":\n        return \"badge-warning\";\n      case \"not delivered\":\n        return \"badge-warning\";\n      case \"pending\":\n        return \"badge-primary\";\n      default:\n        break;\n    }\n  };\n\n  getStatusTextColor = status => {\n    switch (status) {\n      case \"In Stock\":\n        return \"text-success\";\n      case \"Low Stock\":\n        return \"text-warning\";\n      case \"Out of Stock\":\n        return \"text-danger\";\n      default:\n        return \"text-primary\";\n    }\n  };\n\n  render() {\n    let {\n      cardList = [],\n      lastMonthSummery = [],\n      topAuthorList = [],\n      newUserList = [],\n      topProductList = []\n    } = this.state;\n\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Dashboard\", path: \"/dashboard\" },\n            { name: \"Version 2\" }\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12\">\n            <div className=\"row\">\n              {cardList.map((card, index) => (\n                <div key={index} className=\"col-md-4\">\n                  <div className=\"card card-icon-big mb-4\">\n                    <div className=\"card-body text-center\">\n                      <i className={card.icon}></i>\n                      <p className=\"text-muted mt-2 mb-0 text-capitalize\">\n                        {card.subtitle}\n                      </p>\n                      <p className=\"lead text-18 mt-2 mb-0 text-capitalize\">\n                        {card.title}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 col-md-12\">\n            <div className=\"card mb-4\">\n              <div className=\"card-body p-0\">\n                <h5 className=\"card-title m-0 p-3\">Sales</h5>\n                <LineChart4 height=\"300px\"></LineChart4>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 col-md-12\">\n            <SimpleCard title=\"Last Month Summary\" className=\"mb-4\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <table className=\"table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Item</th>\n                        <th scope=\"col\">Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {lastMonthSummery.map((item, index) => (\n                        <tr key={index}>\n                          <td>{item.name}</td>\n                          <td className={this.getStatusTextColor(item.status)}>\n                            {item.status}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"col-md-6\">\n                  <DoughnutChart height=\"200px\"></DoughnutChart>\n                </div>\n              </div>\n            </SimpleCard>\n          </div>\n\n          <div className=\"col-lg-6 col-md-12\">\n            <SimpleCard title=\"Top Authors\" className=\"mb-4\">\n              {topAuthorList.map((author, index) => (\n                <div\n                  key={index}\n                  className={classList({\n                    \"d-flex align-items-center border-bottom-dotted-dim\": true,\n                    \"mb-3 pb-3\": index !== topAuthorList.length - 1\n                  })}\n                >\n                  <img\n                    className=\"avatar-md rounded mr-3\"\n                    src={author.photoUrl}\n                    alt=\"\"\n                  />\n                  <div className=\"flex-grow-1\">\n                    <h6 className=\"m-0\">{author.name}</h6>\n                    <p className=\"m-0 text-small text-muted\">\n                      {author.description}\n                    </p>\n                  </div>\n                  <div>\n                    <button className=\"btn btn-outline-primary btn-rounded btn-sm\">\n                      Follow\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"card o-hidden mb-4\">\n              <div className=\"card-header d-flex card-title align-items-center mb-0\">\n                <h3 className=\"w-50 float-left m-0\">New Users</h3>\n              </div>\n\n              <div className=\"table-responsive\">\n                <Table\n                  hover\n                  id=\"user_table\"\n                  className=\"table dataTable-collapse text-center\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n                <div className=\"px-3 pb-3 mt-3 d-flex flex-row justify-content-end\">\n                  <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={5}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-6\">\n            <div className=\"card o-hidden mb-4\">\n              <div className=\"card-header d-flex card-title m-0 align-items-center\">\n                <h3 className=\"w-50 float-left card-title m-0\">Total Sales</h3>\n              </div>\n\n              <div className=\"table-responsive\">\n                <Table\n                  hover\n                  id=\"sales_table\"\n                  className=\"table dataTable-collapse text-center\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Product</th>\n                      <th scope=\"col\">Date</th>\n\n                      <th scope=\"col\">Price</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {topProductList.map((product, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{product.name}</td>\n                        <td>{product.date}</td>\n                        <td>${product.price}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              product.status\n                            )}`}\n                          >\n                            {product.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n                <div className=\"px-3 pb-3 mt-3 d-flex flex-row justify-content-end\">\n                  <ReactPaginate\n                    previousLabel={\"Previous\"}\n                    nextLabel={\"Next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={5}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard2;\n"],"sourceRoot":""}