{"version":3,"sources":["app/views/sessions/Error.jsx"],"names":["Error","intervalRef","state","timeLeft","getErrorView","errorType","props","errorObject","VIEW_FORBIDDEN","className","Math","round","to","componentDidMount","logoutUser","setInterval","setState","AppNotification","type","msg","componentWillUnmount","clearInterval","this","Component","withRouter","connect","PropTypes","func","isRequired"],"mappings":"uOAUMA,E,4MACJC,YAAc,K,EAEdC,MAAQ,CACNC,SAAS,K,EAGXC,aAAe,WAAM,IAEXC,EAAc,EAAKC,MAAnBD,UACAF,EAAa,EAAKD,MAAlBC,SACFI,EAAc,CAClBC,eACE,yBAAKC,UAAU,8BACb,wBAAIA,UAAU,WAAd,OACF,uBAAGA,UAAU,2BAAb,iBACE,uBAAGA,UAAU,4BAAb,wEACuE,iCADvE,qBACkG,2BAAIC,KAAKC,MAAMR,EAAS,MAD1H,UAC4IA,EAAW,IAAO,IAAI,GADlK,UAON,OAAGE,EACYE,EAAYF,GAKzB,yBAAKI,UAAU,8BACb,wBAAIA,UAAU,WAAd,OACA,uBAAGA,UAAU,2BAAb,UACA,uBAAGA,UAAU,4BAAb,uDAGA,kBAAC,IAAD,CAAMG,GAAG,gBAAgBH,UAAU,sCAAnC,qB,EAQNI,kBAAqB,WAAM,IAAD,EACU,EAAKP,MAA/BD,EADgB,EAChBA,UAAWS,EADK,EACLA,WACbX,EAAa,EAAKD,MAAlBC,SACHE,GAAaG,MAChB,EAAKP,YAAcc,aAAY,YAC7BZ,GAAsB,KAQpB,EAAKa,SAAS,CAAEb,cANhB,IAAIc,IAAgB,CAClBC,KAAK,UACLC,IAAI,kCAENL,OAIC,O,EAUPM,qBAAuB,WACrBC,cAAc,EAAKpB,c,uDAJnB,OAAOqB,KAAKlB,mB,GAjEImB,aAkFLC,sBACbC,aANsB,SAAAvB,GAAK,MAAK,CAChCY,WAAYY,IAAUC,KAAKC,cAKF,CACvBd,gBADFW,CAEGzB","file":"static/js/140.2d7859b4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, Redirect, NavLink, withRouter } from \"react-router-dom\";\nimport { VIEW_FORBIDDEN } from \"../../appConstants\";\nimport AppNotification  from \"../../appNotifications\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n\n\nclass Error extends Component {\n  intervalRef = null\n\n  state = {\n    timeLeft:5000,\n  };\n\n  getErrorView = () =>{\n\n    const { errorType } = this.props;\n    const { timeLeft } = this.state;\n    const errorObject = {\n      VIEW_FORBIDDEN : (\n        <div className=\"not-found-wrap text-center\">\n          <h1 className=\"text-60\">403</h1>\n        <p className=\"text-36 subheading mb-3\">Access Denied</p>\n          <p className=\"mb-5  text-muted text-18\">\n            Please contact admin if you require access. For now, you may move on <b>OR</b> be logged out in <b>{Math.round(timeLeft/1000)}</b> second{timeLeft > 1000 ? 's':''} ...\n          </p>\n        </div>\n      )\n    }\n\n    if(errorType){\n      const view = errorObject[errorType];\n      return view;\n    }\n\n    return (\n      <div className=\"not-found-wrap text-center\">\n        <h1 className=\"text-60\">404</h1>\n        <p className=\"text-36 subheading mb-3\">Error!</p>\n        <p className=\"mb-5  text-muted text-18\">\n          Sorry! The page you were looking for doesn't exist.\n        </p>\n        <Link to=\"/dashboard/v1\" className=\"btn btn-lg btn-primary btn-rounded\">\n          Go back to home\n        </Link>\n      </div>\n    );\n\n  }\n\n  componentDidMount  = () =>{\n    const { errorType, logoutUser } = this.props;\n    let { timeLeft } = this.state;\n    if(errorType == VIEW_FORBIDDEN){\n    this.intervalRef = setInterval(()=>{\n      timeLeft = timeLeft - 1000;\n      if(!timeLeft){\n        new AppNotification({\n          type:\"warning\",\n          msg:\"You attempted illegal access.\"\n        })\n        logoutUser();\n      }else{\n        this.setState({ timeLeft })\n      }\n      }, 1000)\n    }\n\n  }\n\n\n  render() {\n    return this.getErrorView();\n  }\n\n  componentWillUnmount = () =>{\n    clearInterval(this.intervalRef)\n  }\n}\n\nError.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  logoutUser: PropTypes.func.isRequired,\n});\n\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    logoutUser\n  })(Error)\n);\n"],"sourceRoot":""}