{"version":3,"sources":["../node_modules/react-bootstrap/esm/Button.js","app/views/app/chat/chatService.js","app/views/app/chat/ChatSidenav.jsx","app/views/app/chat/EmptyMessage.jsx","app/views/app/chat/ChatContainer.jsx","app/views/app/chat/AppChat.jsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/SafeAnchor.js"],"names":["Button","React","forwardRef","_ref","ref","bsPrefix","variant","size","active","className","block","type","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","href","createElement","SafeAnchor","_extends","disabled","Component","displayName","defaultProps","getContactById","id","axios","get","data","getRecentContact","getChatRoomByContactId","currentUser","contactId","sendNewMessage","message","post","ChatSidenav","open","contactList","recentContactList","handleContactClick","toggleSidenav","useState","query","setQuery","style","left","onClick","placeholder","value","onChange","target","filter","user","name","toLocaleLowerCase","match","map","key","status","src","avatar","alt","format","Date","lastChatTime","getTime","EmptyMessage","height","width","borderRadius","ChatContainer","currentChatRoom","opponentUser","messageList","setBottomRef","handleMessageSend","isMobile","setMessage","marginLeft","containerRef","item","ind","getTimeDifference","time","text","cols","rows","e","onKeyUp","event","shiftKey","trim","htmlFor","console","log","files","AppChat","state","bottomRef","createRef","updateRecentContactList","then","setState","scrollToBottom","current","scrollIntoView","behavior","chatId","recentListUpdated","scrollTop","setTimeout","currentUserId","this","window","windowResizeListener","addEventListener","removeEventListener","Card","createChainedFunction","_len","arguments","length","funcs","Array","_key","f","reduce","acc","Error","_len2","args","_key2","apply","isTrivialHref","_ref$as","onKeyDown","handleClick","preventDefault","stopPropagation","role","tabIndex"],"mappings":"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","file":"static/js/85.62982fdd.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import axios from \"axios\";\n\nexport const getContactById = id => {\n  return axios.get(\"/api/chat/contacts\", { data: id });\n};\nexport const getRecentContact = id => {\n  return axios.get(\"/api/chat/contacts/recent\", { data: id });\n};\nexport const getAllContact = currentUserId => {\n  return axios.get(\"/api/chat/contacts/all\", { data: currentUserId });\n};\nexport const getChatRoomByContactId = (currentUser, contactId) => {\n  return axios.get(\"/api/chat/chat-room\", { data: { currentUser, contactId } });\n};\nexport const deleteMessage = message => {\n  return axios.post(\"/api/chat/delete\", message);\n};\nexport const sendNewMessage = message => {\n  return axios.post(\"/api/chat/add\", message);\n};\nexport const updateMessage = message => {\n  return axios.post(\"/api/chat/update\", message);\n};\n","import React, { useState } from \"react\";\n// import ChatAvatar from \"./ChatAvatar\";\nimport Scrollbar from \"react-perfect-scrollbar\";\n// import { Divider } from \"@material-ui/core\";\nimport { format } from \"date-fns\";\n\nconst ChatSidenav = ({\n  open,\n  currentUser,\n  contactList = [],\n  recentContactList = [],\n  handleContactClick,\n  toggleSidenav\n}) => {\n  const [query, setQuery] = useState(\"\");\n\n  return (\n    <div\n      className=\"chat-sidebar-wrap sidebar\"\n      style={{ left: !open ? \"-260px\" : 0 }}\n    >\n      <div className=\"border-right\">\n        <div className=\"pt-2 pb-2 pl-3 pr-3 d-flex align-items-center o-hidden box-shadow-1 chat-topbar\">\n          <span className=\"link-icon d-md-none\" onClick={toggleSidenav}>\n            <i className=\"icon-regular ml-0 mr-3 i-Left\"></i>\n          </span>\n          <div className=\"form-group m-0 flex-grow-1\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control-rounded\"\n              id=\"search\"\n              placeholder=\"Search contacts\"\n              value={query}\n              onChange={({ target: { value } }) => setQuery(value)}\n            />\n          </div>\n        </div>\n\n        <Scrollbar className=\"contacts-scrollable\">\n          <div className=\"mt-4 pb-2 pl-3 pr-3 font-weight-bold text-muted border-bottom\">\n            Recent\n          </div>\n\n          {recentContactList\n            .filter(user =>\n              user.name.toLocaleLowerCase().match(query.toLocaleLowerCase())\n            )\n            .map(user => (\n              <div\n                key={user.id}\n                onClick={() => handleContactClick(user.id)}\n                className={`p-3 d-flex align-items-center border-bottom contact ${user.status}`}\n              >\n                <img\n                  src={user.avatar}\n                  className=\"avatar-sm rounded-circle mr-3\"\n                  alt=\"\"\n                />\n                <div>\n                  <h6 className=\"m-0\">{user.name}</h6>\n                  <span className=\"text-muted text-small\">\n                    {format(\n                      new Date(user.lastChatTime).getTime(),\n                      \"dd MMM, yyyy\"\n                    )}\n                  </span>\n                </div>\n              </div>\n            ))}\n\n          <div className=\"mt-3 pb-2 pl-3 pr-3 font-weight-bold text-muted border-bottom\">\n            Contacts\n          </div>\n          {contactList\n            .filter(user =>\n              user.name.toLocaleLowerCase().match(query.toLocaleLowerCase())\n            )\n            .map(user => (\n              <div\n                key={user.id}\n                onClick={() => handleContactClick(user.id)}\n                className=\"p-3 d-flex border-bottom align-items-center contact online\"\n              >\n                <img\n                  src={user.avatar}\n                  className=\"avatar-sm rounded-circle mr-3\"\n                  alt=\"\"\n                />\n                <h6 className=\"\">{user.name}</h6>\n              </div>\n            ))}\n        </Scrollbar>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatSidenav;\n","import React from \"react\";\n\nconst EmptyMessage = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center h-100\">\n      <div\n        className=\"card bg-white d-flex justify-content-center align-items-center\"\n        style={{\n          height: \"220px\",\n          width: \"220px\",\n          borderRadius: \"50%\"\n        }}\n      >\n        <i className=\"i-Mail-Reply text-64 text-primary font-weight-900\"> </i>\n      </div>\n      <p className=\"py-3\">Click on a contact to start chat</p>\n    </div>\n  );\n};\n\nexport default EmptyMessage;\n","import React from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { Button } from \"react-bootstrap\";\nimport { getTimeDifference } from \"@utils\";\nimport EmptyMessage from \"./EmptyMessage\";\n\nconst ChatContainer = ({\n  currentUser = {},\n  toggleSidenav,\n  currentChatRoom,\n  opponentUser = {},\n  messageList = [],\n  setBottomRef,\n  handleMessageSend,\n  isMobile\n}) => {\n  let [message, setMessage] = React.useState(\"\");\n  const sendMessageOnEnter = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      message = message.trim();\n      if (message !== \"\") handleMessageSend(message);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div\n      className=\"chat-content-wrap sidebar-content\"\n      style={{ marginLeft: isMobile ? 0 : \"260px\" }}\n    >\n      <div className=\"d-flex pl-3 pr-3 pt-2 pb-2 o-hidden box-shadow-1 chat-topbar\">\n        <span className=\"link-icon d-md-none\" onClick={toggleSidenav}>\n          <i className=\"icon-regular i-Right ml-0 mr-3\"></i>\n        </span>\n        {opponentUser && (\n          <div className=\"d-flex align-items-center\">\n            <img\n              src={opponentUser.avatar}\n              alt=\"\"\n              className=\"avatar-sm rounded-circle mr-2\"\n            />\n            <p className=\"m-0 text-title text-16 flex-grow-1\">\n              {opponentUser.name}\n            </p>\n          </div>\n        )}\n      </div>\n\n      {opponentUser ? (\n        <>\n          <Scrollbar\n            className=\"chat-content\"\n            containerRef={ref => {\n              setBottomRef(ref);\n            }}\n          >\n            {messageList.map((item, ind) =>\n              item.contactId === opponentUser.id ? (\n                <div key={ind} className=\"d-flex mb-4\">\n                  <div className=\"message flex-grow-1\">\n                    <div className=\"d-flex\">\n                      <p className=\"mb-1 text-title text-16 flex-grow-1\">\n                        {item.name}\n                      </p>\n                      <span className=\"text-small text-muted\">\n                        {getTimeDifference(new Date(item.time))} ago\n                      </span>\n                    </div>\n                    <p className=\"m-0 white-space-pre-line\">{item.text}</p>\n                  </div>\n                  <img\n                    src={item.avatar}\n                    alt=\"\"\n                    className=\"avatar-sm rounded-circle ml-3\"\n                  />\n                </div>\n              ) : (\n                <div key={ind} className=\"d-flex mb-4 user\">\n                  <img\n                    src={item.avatar}\n                    alt=\"\"\n                    className=\"avatar-sm rounded-circle ml-3\"\n                  />\n                  <div className=\"message flex-grow-1\">\n                    <div className=\"d-flex\">\n                      <p className=\"mb-1 text-title text-16 flex-grow-1\">\n                        {item.name}\n                      </p>\n                      <span className=\"text-small text-muted\">\n                        {getTimeDifference(new Date(item.time))} ago\n                      </span>\n                    </div>\n                    <p className=\"m-0 white-space-pre-line\">{item.text}</p>\n                  </div>\n                </div>\n              )\n            )}\n          </Scrollbar>\n          <div className=\"pl-3 pr-3 pt-3 pb-3 box-shadow-1 chat-input-area\">\n            <form className=\"inputForm\">\n              <div className=\"form-group\">\n                <textarea\n                  className=\"form-control form-control-rounded\"\n                  placeholder=\"Type your message\"\n                  name=\"message\"\n                  id=\"message\"\n                  cols=\"30\"\n                  rows=\"3\"\n                  onChange={e => setMessage(e.target.value)}\n                  onKeyUp={sendMessageOnEnter}\n                  value={message}\n                ></textarea>\n              </div>\n              <div className=\"d-flex\">\n                <div className=\"flex-grow-1\"></div>\n                <Button\n                  className=\"btn btn-icon btn-rounded mr-2\"\n                  variant=\"primary\"\n                  onClick={() => {\n                    if (message.trim() !== \"\") handleMessageSend(message);\n                    setMessage(\"\");\n                  }}\n                >\n                  <i className=\"i-Paper-Plane\"></i>\n                </Button>\n\n                <label htmlFor=\"attachment\" className=\"mb-0\">\n                  <Button\n                    type=\"button\"\n                    className=\"mr-2\"\n                    as=\"span\"\n                    variant=\"outline-primary\"\n                  >\n                    <i className=\"i-Add-File\"></i>\n                  </Button>\n                </label>\n                <input\n                  onChange={event => {\n                    console.log(event.target.files[0]);\n                  }}\n                  className=\"d-none\"\n                  id=\"attachment\"\n                  type=\"file\"\n                />\n              </div>\n            </form>\n          </div>\n        </>\n      ) : (\n        <EmptyMessage></EmptyMessage>\n      )}\n    </div>\n  );\n};\n\nexport default ChatContainer;\n","import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport {\n  getAllContact,\n  getRecentContact,\n  sendNewMessage,\n  getContactById,\n  getChatRoomByContactId\n} from \"./chatService\";\nimport ChatSidenav from \"./ChatSidenav\";\nimport ChatContainer from \"./ChatContainer\";\nimport { isMobile } from \"@utils\";\n\nclass AppChat extends Component {\n  state = {\n    currentUser: {\n      id: \"7863a6802ez0e277a0f98534\"\n    },\n    contactList: [],\n    recentContactList: [],\n    messageList: [],\n    currentChatRoom: \"\",\n    opponentUser: null,\n    open: true,\n    isMobile: false\n  };\n\n  bottomRef = React.createRef();\n  windowResizeListener;\n\n  componentDidMount() {\n    let { id } = this.state.currentUser;\n    getContactById(id).then(data => {\n      this.setState({\n        currentUser: {\n          ...data.data\n        }\n      });\n    });\n    getAllContact(this.state.currentUser.id).then(data =>\n      this.setState({ contactList: [...data.data] })\n    );\n    this.updateRecentContactList();\n\n    if (isMobile())\n      this.setState({\n        open: false,\n        isMobile: true\n      });\n    if (window)\n      this.windowResizeListener = window.addEventListener(\"resize\", e => {\n        if (isMobile())\n          this.setState({\n            open: false,\n            isMobile: true\n          });\n        else\n          this.setState({\n            open: true,\n            isMobile: false\n          });\n      });\n  }\n\n  componentWillUnmount() {\n    if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n\n  updateRecentContactList = () => {\n    let { id } = this.state.currentUser;\n    getRecentContact(id).then(data => {\n      this.setState({\n        recentContactList: [...data.data]\n      });\n    });\n  };\n\n  scrollToBottom = () => {\n    this.bottomRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  handleContactClick = contactId => {\n    if (isMobile()) this.toggleSidenav();\n\n    getContactById(contactId).then(({ data }) => {\n      this.setState({\n        opponentUser: { ...data }\n      });\n    });\n\n    getChatRoomByContactId(this.state.currentUser.id, contactId).then(\n      ({ data }) => {\n        let { chatId, messageList, recentListUpdated } = data;\n        console.log(chatId);\n\n        this.setState(\n          {\n            currentChatRoom: chatId,\n            messageList\n          },\n          () => {\n            this.bottomRef.scrollTop = 9999999999999;\n          }\n        );\n        if (recentListUpdated) {\n          this.updateRecentContactList();\n        }\n      }\n    );\n  };\n\n  handleMessageSend = message => {\n    let { id } = this.state.currentUser;\n    let { currentChatRoom, opponentUser } = this.state;\n    if (currentChatRoom === \"\") return;\n    sendNewMessage({\n      chatId: currentChatRoom,\n      text: message,\n      contactId: id,\n      time: new Date()\n    }).then(data => {\n      this.setState(\n        {\n          messageList: [...data.data]\n        },\n        () => {\n          this.bottomRef.scrollTop = 9999999999999;\n        }\n      );\n\n      // bot message\n      setTimeout(() => {\n        sendNewMessage({\n          chatId: currentChatRoom,\n          text: `Hi, I'm ${opponentUser.name}. Your imaginary friend.`,\n          contactId: opponentUser.id,\n          time: new Date()\n        }).then(data => {\n          this.setState(\n            {\n              messageList: [...data.data]\n            },\n            () => {\n              this.bottomRef.scrollTop = 9999999999999;\n            }\n          );\n        });\n      }, 750);\n      // bot message ends here\n    });\n  };\n\n  setBottomRef = ref => {\n    this.bottomRef = ref;\n  };\n\n  toggleSidenav = () => this.setState({ open: !this.state.open });\n\n  render() {\n    let {\n      open,\n      isMobile,\n      currentUser,\n      contactList,\n      recentContactList,\n      messageList,\n      opponentUser,\n      currentChatRoom\n    } = this.state;\n    return (\n      <Card className=\"chat-sidebar-container sidebar-container\">\n        <ChatSidenav\n          open={open}\n          isMobile={isMobile}\n          toggleSidenav={this.toggleSidenav}\n          contactList={contactList}\n          recentContactList={recentContactList}\n          handleContactClick={this.handleContactClick}\n        ></ChatSidenav>\n        <ChatContainer\n          open={open}\n          isMobile={isMobile}\n          toggleSidenav={this.toggleSidenav}\n          messageList={messageList}\n          currentUser={currentUser}\n          opponentUser={opponentUser}\n          currentChatRoom={currentChatRoom}\n          setBottomRef={this.setBottomRef}\n          handleMessageSend={this.handleMessageSend}\n        ></ChatContainer>\n      </Card>\n    );\n  }\n}\n\nexport default AppChat;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport createChainedFunction from './createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'a' : _ref$as,\n      disabled = _ref.disabled,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"disabled\", \"onKeyDown\"]);\n\n  var handleClick = function handleClick(event) {\n    var href = props.href,\n        onClick = props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  }));\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;"],"sourceRoot":""}