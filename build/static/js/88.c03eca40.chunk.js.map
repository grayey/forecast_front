{"version":3,"sources":["../node_modules/react-bootstrap/esm/Button.js","app/views/extra-kits/AppToastr.jsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/SafeAnchor.js"],"names":["Button","React","forwardRef","_ref","ref","bsPrefix","variant","size","active","className","block","type","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","href","createElement","SafeAnchor","_extends","disabled","Component","displayName","defaultProps","AppToastr","state","routeSegments","name","path","onClick","NotificationManager","success","info","warning","error","createChainedFunction","_len","arguments","length","funcs","Array","_key","filter","f","reduce","acc","Error","_len2","args","_key2","apply","this","isTrivialHref","trim","_ref$as","onKeyDown","handleClick","event","preventDefault","stopPropagation","role","tabIndex","key"],"mappings":"4GAAA,oEAWIA,EAASC,IAAMC,YAAW,SAAUC,EAAMC,GAC5C,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZC,EAASL,EAAKK,OACdC,EAAYN,EAAKM,UACjBC,EAAQP,EAAKO,MACbC,EAAOR,EAAKQ,KACZC,EAAKT,EAAKS,GACVC,EAAQC,YAA8BX,EAAM,CAAC,WAAY,UAAW,OAAQ,SAAU,YAAa,QAAS,OAAQ,OAEpHY,EAASC,YAAmBX,EAAU,OACtCY,EAAUC,IAAWT,EAAWM,EAAQP,GAAU,SAAUO,EAAS,IAAMT,EAASI,GAASK,EAAS,SAAUR,GAAQQ,EAAS,IAAMR,GAE3I,GAAIM,EAAMM,KACR,OAAoBlB,IAAMmB,cAAcC,IAAYC,YAAS,GAAIT,EAAO,CACtED,GAAIA,EACJR,IAAKA,EACLK,UAAWS,IAAWD,EAASJ,EAAMU,UAAY,eAIjDnB,IACFS,EAAMT,IAAMA,GAGVO,EACFE,EAAMF,KAAOA,EACHC,IACVC,EAAMF,KAAO,UAGf,IAAIa,EAAYZ,GAAM,SACtB,OAAoBX,IAAMmB,cAAcI,EAAWF,YAAS,GAAIT,EAAO,CACrEJ,UAAWQ,QAGfjB,EAAOyB,YAAc,SACrBzB,EAAO0B,aA3CY,CACjBpB,QAAS,UACTE,QAAQ,EACRe,UAAU,GAyCGvB,O,yHC1CT2B,E,4MACJC,MAAQ,G,uDAEN,OACE,6BACE,kBAAC,IAAD,CACEC,cAAe,CACb,CAAEC,KAAM,OAAQC,KAAM,KACtB,CAAED,KAAM,aAAcC,KAAM,eAC5B,CAAED,KAAM,aAGZ,wBAAIrB,UAAU,cAAd,SACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEH,QAAQ,kBACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBC,QAClB,kBACA,mBANN,mBAYA,kBAAC,IAAD,CACE5B,QAAQ,eACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBE,KAAK,eAAgB,gBAJ7C,mBAaN,yBAAK1B,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEH,QAAQ,kBACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBG,QAClB,kBACA,mBANN,mBAYA,kBAAC,IAAD,CACE9B,QAAQ,iBACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBI,MAAM,iBAAkB,kBAJhD,sBAcR,wBAAI5B,UAAU,cAAd,uBACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEH,QAAQ,kBACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBC,QAClB,kBACA,gBACA,OAPN,mBAaA,kBAAC,IAAD,CACE5B,QAAQ,eACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBE,KAClB,eACA,aACA,OAPN,mBAiBN,yBAAK1B,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEH,QAAQ,kBACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBG,QAClB,kBACA,gBACA,OAPN,mBAaA,kBAAC,IAAD,CACE9B,QAAQ,iBACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBI,MAClB,iBACA,eACA,OAPN,sBAkBR,wBAAI5B,UAAU,cAAd,wBACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEH,QAAQ,kBACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBC,QAClB,kBACA,gBACA,KACA,cACA,KATN,mBAeA,kBAAC,IAAD,CACE5B,QAAQ,eACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBE,KAClB,eACA,aACA,KACA,cACA,KATN,mBAmBN,yBAAK1B,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEH,QAAQ,kBACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBG,QAClB,kBACA,gBACA,KACA,cACA,KATN,mBAeA,kBAAC,IAAD,CACE9B,QAAQ,iBACRG,UAAU,YACVuB,QAAS,WACPC,sBAAoBI,MAClB,iBACA,eACA,KACA,cACA,KATN,sBAmBR,kBAAC,wBAAD,W,GAxNgBb,aA8NTG,a,iCCnMAW,IA1Bf,WACE,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAQ,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAChFF,EAAME,GAAQJ,UAAUI,GAG1B,OAAOF,EAAMG,QAAO,SAAUC,GAC5B,OAAY,MAALA,KACNC,QAAO,SAAUC,EAAKF,GACvB,GAAiB,oBAANA,EACT,MAAM,IAAIG,MAAM,2EAGlB,OAAY,OAARD,EAAqBF,EAClB,WACL,IAAK,IAAII,EAAQV,UAAUC,OAAQU,EAAO,IAAIR,MAAMO,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IACpFD,EAAKC,GAASZ,UAAUY,GAI1BJ,EAAIK,MAAMC,KAAMH,GAEhBL,EAAEO,MAAMC,KAAMH,MAEf,Q,iCChCL,4CAKA,SAASI,EAAcpC,GACrB,OAAQA,GAAwB,MAAhBA,EAAKqC,OAWvB,IAAInC,EAAapB,IAAMC,YAAW,SAAUC,EAAMC,GAChD,IAAIqD,EAAUtD,EAAKS,GACfY,OAAwB,IAAZiC,EAAqB,IAAMA,EACvClC,EAAWpB,EAAKoB,SAChBmC,EAAYvD,EAAKuD,UACjB7C,EAAQC,YAA8BX,EAAM,CAAC,KAAM,WAAY,cAE/DwD,EAAc,SAAqBC,GACrC,IAAIzC,EAAON,EAAMM,KACba,EAAUnB,EAAMmB,SAEhBT,GAAYgC,EAAcpC,KAC5ByC,EAAMC,iBAGJtC,EACFqC,EAAME,kBAIJ9B,GACFA,EAAQ4B,IAuBZ,OAZIL,EAAc1C,EAAMM,QACtBN,EAAMkD,KAAOlD,EAAMkD,MAAQ,SAG3BlD,EAAMM,KAAON,EAAMM,MAAQ,KAGzBI,IACFV,EAAMmD,UAAY,EAClBnD,EAAM,kBAAmB,GAGPZ,IAAMmB,cAAcI,EAAWF,YAAS,CAC1DlB,IAAKA,GACJS,EAAO,CACRmB,QAAS2B,EACTD,UAAWpB,aAvBO,SAAuBsB,GACvB,MAAdA,EAAMK,MACRL,EAAMC,iBACNF,EAAYC,MAoBkCF,SAGpDrC,EAAWI,YAAc,aACVJ","file":"static/js/88.c03eca40.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport { Button } from \"react-bootstrap\";\nimport {\n  NotificationContainer,\n  NotificationManager\n} from \"react-notifications\";\n\nclass AppToastr extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Home\", path: \"/\" },\n            { name: \"Extra Kits\", path: \"/extra-kits\" },\n            { name: \"Toastr\" }\n          ]}\n        ></Breadcrumb>\n        <h3 className=\"card-title\">Types</h3>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-success\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.success(\n                      \"success message\",\n                      \"Success Title\"\n                    );\n                  }}\n                >\n                  success toaster\n                </Button>\n                <Button\n                  variant=\"outline-info\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.info(\"info message\", \"Info Title\");\n                  }}\n                >\n                  info toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-warning\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.warning(\n                      \"warning message\",\n                      \"warning Title\"\n                    );\n                  }}\n                >\n                  warning toaster\n                </Button>\n                <Button\n                  variant=\"outline-danger\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.error(\"danger message\", \"danger Title\");\n                  }}\n                >\n                  danger toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <h3 className=\"card-title\">Toastr with timeout</h3>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-success\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.success(\n                      \"success message\",\n                      \"Success Title\",\n                      10000\n                    );\n                  }}\n                >\n                  success toaster\n                </Button>\n                <Button\n                  variant=\"outline-info\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.info(\n                      \"info message\",\n                      \"Info Title\",\n                      10000\n                    );\n                  }}\n                >\n                  info toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-warning\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.warning(\n                      \"warning message\",\n                      \"warning Title\",\n                      10000\n                    );\n                  }}\n                >\n                  warning toaster\n                </Button>\n                <Button\n                  variant=\"outline-danger\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.error(\n                      \"danger message\",\n                      \"danger Title\",\n                      10000\n                    );\n                  }}\n                >\n                  danger toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <h3 className=\"card-title\">Toastr with priority</h3>\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-success\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.success(\n                      \"success message\",\n                      \"Success Title\",\n                      5000,\n                      () => {},\n                      4\n                    );\n                  }}\n                >\n                  success toaster\n                </Button>\n                <Button\n                  variant=\"outline-info\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.info(\n                      \"info message\",\n                      \"Info Title\",\n                      5000,\n                      () => {},\n                      3\n                    );\n                  }}\n                >\n                  info toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-6\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Button\n                  variant=\"outline-warning\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.warning(\n                      \"warning message\",\n                      \"warning Title\",\n                      5000,\n                      () => {},\n                      2\n                    );\n                  }}\n                >\n                  warning toaster\n                </Button>\n                <Button\n                  variant=\"outline-danger\"\n                  className=\"btn-block\"\n                  onClick={() => {\n                    NotificationManager.error(\n                      \"danger message\",\n                      \"danger Title\",\n                      5000,\n                      () => {},\n                      1\n                    );\n                  }}\n                >\n                  danger toaster\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n\nexport default AppToastr;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport createChainedFunction from './createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'a' : _ref$as,\n      disabled = _ref.disabled,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"disabled\", \"onKeyDown\"]);\n\n  var handleClick = function handleClick(event) {\n    var href = props.href,\n        onClick = props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  }));\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;"],"sourceRoot":""}