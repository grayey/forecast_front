{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","app/views/extra-kits/AppDropdown.jsx","../node_modules/react-bootstrap/esm/Col.js"],"names":["DEVICE_SIZES","Row","React","forwardRef","_ref","ref","bsPrefix","className","noGutters","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","AppDropdown","routeSegments","name","path","lg","md","sm","xs","title","map","variant","i","key","Toggle","Menu","Item","toLowerCase","eventKey","active","Divider","size","Button","split","drop","toLocaleUpperCase","alignRight","Col","prefix","spans","span","offset","order","_propValue$span","length"],"mappings":"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","file":"static/js/103.80fa7093.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import React, { Component } from \"react\";\nimport { Breadcrumb, SimpleCard } from \"@gull\";\nimport { Dropdown, Row, Col, Button } from \"react-bootstrap\";\n\nclass AppDropdown extends Component {\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Home\", path: \"/\" },\n            { name: \"Extra Kits\", path: \"/extra-kits\" },\n            { name: \"App Dropdown\" }\n          ]}\n        ></Breadcrumb>\n        <Row>\n          <Col lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n            <SimpleCard title=\"Simple Dropdowns\" className=\"h-100\">\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\n                Single button dropdowns:\n              </h6>\n              <div className=\"d-flex flex-wrap\">\n                {[\"outline-primary\", \"primary\", \"success\"].map((variant, i) => (\n                  <Dropdown key={i}>\n                    <Dropdown.Toggle variant={variant} className=\"mr-3 mb-3\">\n                      Dropdown button\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item>Action</Dropdown.Item>\n                      <Dropdown.Item>Another Action</Dropdown.Item>\n                      <Dropdown.Item>Something else here</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                ))}\n              </div>\n\n              <hr className=\"mt-0 mb-3\" />\n\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\n                Single button dropdowns with icon:\n              </h6>\n              <div className=\"d-flex flex-wrap\">\n                {[\"outline-primary\", \"primary\", \"success\"].map((variant, i) => (\n                  <Dropdown key={i}>\n                    <Dropdown.Toggle variant={variant} className=\"mr-3 mb-3\">\n                      Dropdown button\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item>\n                        <i className=\"i-Bell\"> </i> Action\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"i-Download-from-Cloud\"> </i> Another\n                        action\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"i-Money-Bag\"> </i> Something else here\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n               \n               ))}\n              </div>\n            </SimpleCard>\n          </Col>\n\n          <Col lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n            <SimpleCard title=\"Dropup Variation\" className=\"h-100\">\n              <div className=\"d-flex flex-wrap\">\n                {[\n                  \"Primary\",\n                  \"Secondary\",\n                  \"Success\",\n                  \"Info\",\n                  \"Warning\",\n                  \"Danger\"\n                ].map((variant, i) => (\n                  <Dropdown key={i}>\n                    <Dropdown.Toggle\n                      className=\"mr-3 mb-3\"\n                      title={variant}\n                      variant={variant.toLowerCase()}\n                      key={variant}\n                    >\n                      {variant}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"3\" active>\n                        Active Item\n                      </Dropdown.Item>\n                      <Dropdown.Divider />\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                ))}\n              </div>\n            </SimpleCard>\n          </Col>\n\n          <Col lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n            <SimpleCard title=\"Size Variation\" className=\"h-100\">\n              <div className=\"d-flex flex-wrap\">\n                {[\"Primary\", \"Success\", \"warning\"].map((variant, i) => (\n                  <Dropdown key={i}>\n                    <Dropdown.Toggle\n                      className=\"mr-3 mb-3\"\n                      title={variant}\n                      size=\"lg\"\n                      variant={variant.toLowerCase()}\n                      key={variant}\n                    >\n                      {variant}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"3\" active>\n                        Active Item\n                      </Dropdown.Item>\n                      <Dropdown.Divider />\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                ))}\n              </div>\n\n              <hr className=\"mt-0 mb-3\" />\n\n              <div className=\"d-flex flex-wrap\">\n                {[\"Primary\", \"Success\", \"warning\"].map((variant, i) => (\n                  <Dropdown key={i}>\n                    <Dropdown.Toggle\n                      className=\"mr-3 mb-3\"\n                      title={variant}\n                      size=\"sm\"\n                      variant={variant.toLowerCase()}\n                      key={variant}\n                    >\n                      {variant}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"3\" active>\n                        Active Item\n                      </Dropdown.Item>\n                      <Dropdown.Divider />\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                ))}\n              </div>\n\n              <hr className=\"mt-0 mb-3\" />\n\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\n                Single Icon Dropdown:\n              </h6>\n\n              <div className=\"d-flex flex-wrap\">\n                <Dropdown>\n                  <Dropdown.Toggle\n                    className=\"mr-3 mb-3 toggle-hidden\"\n                    as={Button}\n                    variant=\"primary\"\n                  >\n                    <span className=\"_dot _inline-dot mr-1\"></span>\n                    <span className=\"_dot _inline-dot mr-1\"></span>\n                    <span className=\"_dot _inline-dot\"></span>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"3\" active>\n                      Active Item\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <Dropdown>\n                  <Dropdown.Toggle\n                    className=\"mr-3 mb-3 toggle-hidden\"\n                    variant=\"secondary\"\n                  >\n                    <span className=\"_dot _inline-dot bg-warning mr-1\"></span>\n                    <span className=\"_dot _inline-dot bg-warning mr-1\"></span>\n                    <span className=\"_dot _inline-dot bg-warning\"></span>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <Dropdown>\n                  <Dropdown.Toggle\n                    className=\"mr-3 mb-3 toggle-hidden rounded-circle\"\n                    variant=\"success\"\n                  >\n                    <span className=\"_dot _inline-dot mr-1\"></span>\n                    <span className=\"_dot _inline-dot mr-1\"></span>\n                    <span className=\"_dot _inline-dot\"></span>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <Dropdown>\n                  <Dropdown.Toggle className=\"mr-3 mb-3 toggle-hidden border-0 bg-white d-flex flex-column\">\n                    <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\n                    <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\n                    <span className=\"_dot _inline-dot bg-primary\"></span>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </SimpleCard>\n          </Col>\n\n          <Col lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\n            <SimpleCard title=\"Other variation\" className=\"h-100\">\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\n                Hidden Toggle:\n              </h6>\n              <div className=\"d-flex flex-wrap\">\n                {[\"Primary\", \"Success\", \"warning\"].map((variant, i) => (\n                  <Dropdown key={i}>\n                    <Dropdown.Toggle\n                      split\n                      className=\"mr-3 mb-3 toggle-hidden\"\n                      variant={variant.toLowerCase()}\n                      key={variant}\n                    >\n                      {variant}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"3\" active>\n                        Active Item\n                      </Dropdown.Item>\n                      <Dropdown.Divider />\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                ))}\n              </div>\n\n              <hr className=\"mt-0 mb-3\" />\n\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\n                Toggle Icon Direction:\n              </h6>\n              <div className=\"d-flex flex-wrap\">\n                {[\"up\", \"down\", \"left\", \"right\"].map((variant, i) => (\n                  <Dropdown key={i}>\n                    <Dropdown.Toggle\n                      drop={variant}\n                      className=\"mr-3 mb-3\"\n                      key={variant}\n                    >\n                      {variant.toLocaleUpperCase()}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                      <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                ))}\n              </div>\n\n              <hr className=\"mt-0 mb-3\" />\n\n              <h6 className=\"card-subtitle mb-4 mt-0 text-muted\">\n                Dropdown Menu Align:\n              </h6>\n              <div className=\"d-flex flex-wrap\">\n                <Dropdown alignRight>\n                  <Dropdown.Toggle className=\"mr-3 mb-3\">\n                    Menu Align Right\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n\n                <Dropdown>\n                  <Dropdown.Toggle className=\"mr-3 mb-3\">\n                    Menu Align Left\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"3\">Active Item</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </SimpleCard>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default AppDropdown;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;"],"sourceRoot":""}