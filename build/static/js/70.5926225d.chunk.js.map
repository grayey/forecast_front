{"version":3,"sources":["../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","@gull/components/accordions/RightArrowAccordion.jsx","app/views/ui-kits/collapsibles/AppCollapsibles.jsx","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/SafeAnchor.js","../node_modules/react-bootstrap/esm/AccordionContext.js"],"names":["Button","React","forwardRef","_ref","ref","bsPrefix","variant","size","active","className","block","type","as","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","classes","classNames","href","createElement","SafeAnchor","_extends","disabled","Component","displayName","defaultProps","AccordionToggle","_ref$as","children","eventKey","onClick","accordionOnClick","contextEventKey","useContext","AccordionContext","onSelect","SelectableContext","e","useAccordionToggle","_collapseStyles","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","value","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","in","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","Collapse","onEnter","onEntering","onEntered","onExit","onExiting","_ref$dimension","_ref$getDimensionValu","computedDimension","handleEnter","useMemo","createChainedFunction","style","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","Transition","addEndListener","transitionEnd","role","state","innerProps","cloneElement","AccordionCollapse","Children","only","Accordion","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","controlledProps","finalClassName","Provider","Toggle","RightArrowAccordion","title","icon","useState","openItem","setOpenItem","Header","classList","Body","AppCollapsible","routeSegments","name","path","subtitle","map","id","key","toString","defaultActiveKey","Card","color","createContext","makeEventKey","String","_len","arguments","length","funcs","Array","_key","filter","f","reduce","acc","Error","_len2","args","_key2","apply","this","isTrivialHref","trim","onKeyDown","handleClick","event","preventDefault","stopPropagation","tabIndex","context"],"mappings":"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","file":"static/js/70.5926225d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _collapseStyles;\n\nimport classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport React, { useMemo } from 'react';\nimport Transition, { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  var offset = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1);\n  var value = elem[offset];\n  var margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nvar collapseStyles = (_collapseStyles = {}, _collapseStyles[EXITED] = 'collapse', _collapseStyles[EXITING] = 'collapsing', _collapseStyles[ENTERING] = 'collapsing', _collapseStyles[ENTERED] = 'collapse show', _collapseStyles);\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nvar Collapse = React.forwardRef(function (_ref, ref) {\n  var onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      onExit = _ref.onExit,\n      onExiting = _ref.onExiting,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$dimension = _ref.dimension,\n      dimension = _ref$dimension === void 0 ? 'height' : _ref$dimension,\n      _ref$getDimensionValu = _ref.getDimensionValue,\n      getDimensionValue = _ref$getDimensionValu === void 0 ? getDefaultDimensionValue : _ref$getDimensionValu,\n      props = _objectWithoutPropertiesLoose(_ref, [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"className\", \"children\", \"dimension\", \"getDimensionValue\"]);\n\n  /* Compute dimension */\n  var computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  var handleEnter = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = '0';\n    }, onEnter);\n  }, [computedDimension, onEnter]);\n  var handleEntering = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      var scroll = \"scroll\" + computedDimension[0].toUpperCase() + computedDimension.slice(1);\n      elem.style[computedDimension] = elem[scroll] + \"px\";\n    }, onEntering);\n  }, [computedDimension, onEntering]);\n  var handleEntered = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onEntered);\n  }, [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  var handleExit = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = getDimensionValue(computedDimension, elem) + \"px\";\n      triggerBrowserReflow(elem);\n    }, onExit);\n  }, [onExit, getDimensionValue, computedDimension]);\n  var handleExiting = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onExiting);\n  }, [computedDimension, onExiting]);\n  return /*#__PURE__*/React.createElement(Transition // @ts-ignore\n  , _extends({\n    ref: ref,\n    addEndListener: transitionEnd\n  }, props, {\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting\n  }), function (state, innerProps) {\n    return React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'width')\n    }));\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nvar AccordionCollapse = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext);\n  return /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children)));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import React from \"react\";\nimport {\n  Card,\n  Accordion,\n  AccordionToggle,\n  AccordionCollapse,\n  Button\n} from \"react-bootstrap\";\nimport { classList } from \"@utils\";\nimport PropTypes from \"prop-types\";\n\nconst RightArrowAccordion = ({ title, children, icon, eventKey }) => {\n  const [openItem, setOpenItem] = React.useState(false);\n\n  return (\n    <Card className=\"ul-card__border-radius\">\n      <Card.Header className=\"d-flex align-items-center justify-content-between\">\n        <AccordionToggle\n          as=\"span\"\n          eventKey={eventKey}\n          onClick={() => setOpenItem(!openItem)}\n          className=\"cursor-pointer\"\n        >\n          <div className=\"card-title mb-0 text-primary\">\n            {icon && <i className={`${icon} mr-2 text-15`}></i>}\n            {title}\n          </div>\n        </AccordionToggle>\n        <AccordionToggle\n          as=\"span\"\n          eventKey={eventKey}\n          onClick={() => setOpenItem(!openItem)}\n          className=\"cursor-pointer\"\n        >\n          <i\n            className={classList({\n              \"text-primary text-16\": true,\n              \"i-Arrow-Down\": !openItem,\n              \"i-Arrow-Up\": openItem\n            })}\n          ></i>\n        </AccordionToggle>\n      </Card.Header>\n      <AccordionCollapse eventKey={eventKey}>\n        <Card.Body>{children}</Card.Body>\n      </AccordionCollapse>\n    </Card>\n  );\n};\n\nRightArrowAccordion.propTypes = {\n  eventKey: PropTypes.string.isRequired\n};\n\nexport default RightArrowAccordion;\n","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport { Accordion, Button, Card } from \"react-bootstrap\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\nimport RightArrowAccordion from \"@gull/components/accordions/RightArrowAccordion\";\n\nclass AppCollapsible extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Collapsibles\" }\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"mb-3\">\n          <div className=\"row\">\n            <div className=\"col-lg-4 mb-3\">\n              <Accordion>\n                <div className=\"card card-body ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">\n                      Inline or block element\n                    </h5>\n                    <p className=\"mb-3 text-muted\">\n                      Example of inline text toggler\n                    </p>\n\n                    <Accordion.Toggle\n                      eventKey={0}\n                      as=\"span\"\n                      className=\"t-font-boldest ul-cursor--pointer\"\n                    >\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n\n                  <Accordion.Collapse eventKey={0}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n            <div className=\"col-lg-4 mb-3\">\n              <Accordion>\n                <div className=\"card card-body ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">\n                      Text and other links\n                    </h5>\n                    <p className=\"mb-3 text-muted\">\n                      Example of a simple <code>&lt;a&gt;</code> element\n                    </p>\n\n                    <Accordion.Toggle\n                      as=\"a\"\n                      eventKey={1}\n                      className=\"font-weight-semibold collapsed typo_link text-primary t-font-boldest cursor-pointer\"\n                    >\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={1}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n\n            <div className=\"col-lg-4 mb-3\">\n              <Accordion>\n                <div className=\"card card-body ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">\n                      Single or multiple icons\n                    </h5>\n                    <p className=\"mb-3 text-muted\">\n                      Icons in block or inline elements\n                    </p>\n\n                    <Accordion.Toggle\n                      as=\"a\"\n                      eventKey={2}\n                      className=\"text-default collapsed cursor-pointer\"\n                    >\n                      <i className=\"i-Arrow-Down-2 t-font-boldest\"></i>\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={2}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"col-lg-4 mb-3\">\n              <Accordion>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Control toggle with buttons\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={3}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={3}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n            <div className=\"col-lg-4  mb-3\">\n              <Accordion>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Control toggle with buttons\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={4}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={4}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n            <div className=\"col-lg-4  mb-3\">\n              <Accordion>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Control toggle with buttons\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={4}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={4}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"col-lg-4 mb-3\">\n              <Accordion activeKey={3}>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Expanded content by default\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={3}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={3}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n            <div className=\"col-lg-4  mb-3\">\n              <Accordion activeKey={4}>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Expanded content by default\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={4}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={4}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n            <div className=\"col-lg-4  mb-3\">\n              <Accordion activeKey={4}>\n                <div className=\"card card-body  ul-border__bottom\">\n                  <div className=\"text-center\">\n                    <h5 className=\"heading text-primary\">Button</h5>\n                    <p className=\"mb-3 text-muted\">\n                      Expanded content by default\n                    </p>\n                    <Accordion.Toggle as={Button} eventKey={4}>\n                      Toggle content\n                    </Accordion.Toggle>\n                  </div>\n                  <Accordion.Collapse eventKey={4}>\n                    <div className=\"mt-3\">\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </div>\n                  </Accordion.Collapse>\n                </div>\n              </Accordion>\n            </div>\n          </div>\n\n          <div className=\"row mt-5\">\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Basic collapsible\"\n                subtitle=\"Basic collapsible functionality\"\n              >\n                {[1, 2, 3].map(id => (\n                  <Card key={id} className=\"mb-3 shadow-sm\">\n                    <Accordion>\n                      <Card.Header>\n                        <Accordion.Toggle\n                          className=\"cursor-pointer mb-0 text-primary\"\n                          as=\"span\"\n                          eventKey={4}\n                        >\n                          Collapsible Item #{id}\n                        </Accordion.Toggle>\n                      </Card.Header>\n                      <Accordion.Collapse eventKey={4}>\n                        <Card.Body>\n                          Anim pariatur cliche reprehenderit, enim eiusmod high\n                          life accusamus terry richardson ad squid. 3 wolf moon\n                          officia aute, non cupidatat skateboard dolor brunch.\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </Accordion>\n                  </Card>\n                ))}\n              </SimpleCard>\n            </div>\n\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Collapsible Group\"\n                subtitle=\"Display cards as card group\"\n              >\n                <Accordion>\n                  {[1, 2, 3].map(id => (\n                    <Card key={id} className=\"shadow-sm\">\n                      <Card.Header>\n                        <Accordion.Toggle\n                          className=\"cursor-pointer mb-0 text-primary\"\n                          as=\"span\"\n                          eventKey={id.toString()}\n                        >\n                          Collapsible Item #{id}\n                        </Accordion.Toggle>\n                      </Card.Header>\n                      <Accordion.Collapse eventKey={id.toString()}>\n                        <Card.Body>\n                          Anim pariatur cliche reprehenderit, enim eiusmod high\n                          life accusamus terry richardson ad squid. 3 wolf moon\n                          officia aute, non cupidatat skateboard dolor brunch.\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </Card>\n                  ))}\n                </Accordion>\n              </SimpleCard>\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Accordion With Controls\"\n                subtitle=\"Using card controls\"\n              >\n                {[1, 2, 3].map(id => (\n                  <Card key={id} className=\"shadow-sm mb-3\">\n                    <Accordion>\n                      <Card.Header className=\"d-flex align-items-center justify-content-between\">\n                        <Accordion.Toggle\n                          className=\"cursor-pointer mb-0 text-primary\"\n                          as=\"span\"\n                          eventKey={id.toString()}\n                        >\n                          Collapsible Item #{id}\n                        </Accordion.Toggle>\n                        <div className=\"d-flex\">\n                          <i className=\"mx-1 i-Reload\"> </i>\n                          <i className=\"mx-1 i-Drag\"> </i>\n                          <i className=\"mx-1 i-Full-Screen-2\"></i>\n                          <i className=\"mx-1 i-Close-Window\"></i>\n                        </div>\n                      </Card.Header>\n                      <Accordion.Collapse eventKey={id.toString()}>\n                        <Card.Body>\n                          Anim pariatur cliche reprehenderit, enim eiusmod high\n                          life accusamus terry richardson ad squid. 3 wolf moon\n                          officia aute, non cupidatat skateboard dolor brunch.\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </Accordion>\n                  </Card>\n                ))}\n              </SimpleCard>\n            </div>\n\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Left control icon\"\n                subtitle=\"Using left controls\"\n              >\n                {[1, 2, 3].map(id => (\n                  <Accordion key={id} className=\"mb-3\">\n                    <RightArrowAccordion\n                      title={`Collapsible item ${id}`}\n                      eventKey={id.toString()}\n                    >\n                      Anim pariatur cliche reprehenderit, enim eiusmod high life\n                      accusamus terry richardson ad squid. 3 wolf moon officia\n                      aute, non cupidatat skateboard dolor brunch.\n                    </RightArrowAccordion>\n                  </Accordion>\n                ))}\n              </SimpleCard>\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Nested Collapsible\"\n                subtitle=\"Multiple collapsibles levels\"\n              >\n                <Accordion defaultActiveKey={1}>\n                  <Accordion.Toggle\n                    as={Card.Header}\n                    eventKey={1}\n                    className=\"cursor-pointer\"\n                  >\n                    Parent Collapsible Item #1\n                  </Accordion.Toggle>\n                  <Accordion.Collapse eventKey={1}>\n                    <Card.Body>\n                      {[1, 2, 3].map(id => (\n                        <Accordion key={id} className=\"mb-3\">\n                          <Accordion.Toggle\n                            as={Card.Header}\n                            eventKey={id.toString()}\n                            className=\"cursor-pointer\"\n                          >\n                            Collapsible Child #{id}\n                          </Accordion.Toggle>\n                          <Accordion.Collapse eventKey={id.toString()}>\n                            <Card.Body>\n                              Anim pariatur cliche reprehenderit, enim eiusmod\n                              high life accusamus terry richardson ad squid. 3\n                              wolf moon officia aute, non cupidatat skateboard\n                              dolor brunch.\n                            </Card.Body>\n                          </Accordion.Collapse>\n                        </Accordion>\n                      ))}\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Accordion>\n              </SimpleCard>\n            </div>\n\n            <div className=\"col-lg-6\">\n              <SimpleCard\n                className=\"mb-3\"\n                title=\"Styled Collapsible\"\n                subtitle=\"Collapsible with different color heading\"\n              >\n                {[\"danger\", \"success\", \"primary\"].map((color, id) => (\n                  <Accordion key={id} className=\"mb-3\">\n                    <Accordion.Toggle\n                      as={Card.Header}\n                      eventKey={id.toString()}\n                      className={`cursor-pointer text-white bg-${color}`}\n                    >\n                      Collapsible Item #{id + 1}\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={id.toString()}>\n                      <Card.Body>\n                        Anim pariatur cliche reprehenderit, enim eiusmod high\n                        life accusamus terry richardson ad squid. 3 wolf moon\n                        officia aute, non cupidatat skateboard dolor brunch.\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Accordion>\n                ))}\n              </SimpleCard>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppCollapsible;\n","import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport createChainedFunction from './createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'a' : _ref$as,\n      disabled = _ref.disabled,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"disabled\", \"onKeyDown\"]);\n\n  var handleClick = function handleClick(event) {\n    var href = props.href,\n        onClick = props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  }));\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","import React from 'react';\nvar context = React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;"],"sourceRoot":""}