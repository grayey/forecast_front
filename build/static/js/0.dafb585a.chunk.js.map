{"version":3,"sources":["../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/NavContext.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-overlays/esm/DropdownContext.js","../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/react-overlays/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/dom-helpers/esm/matches.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/SafeAnchor.js"],"names":["DropdownMenu","React","forwardRef","_ref","ref","bsPrefix","className","alignRight","rootCloseEvent","flip","showProps","show","renderOnMount","_ref$as","as","Component","popperConfig","props","_objectWithoutPropertiesLoose","isNavbar","useContext","NavbarContext","prefix","useBootstrapPrefix","_usePopperMarginModif","usePopperMarginModifiers","popperRef","marginModifiers","_ref2","useDropdownMenu","alignEnd","usePopper","_extends","modifiers","concat","hasShown","placement","close","menuProps","useMergedRefs","useWrappedRefWithWarning","style","createElement","classNames","displayName","defaultProps","NavContext","createContext","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","Button","variant","size","active","block","type","classes","href","SafeAnchor","disabled","useForceUpdate","useReducer","state","context","usePrevious","value","useRef","useEffect","current","DropdownToggle","split","children","childBsPrefix","undefined","_useDropdownToggle","useDropdownToggle","toggleProps","toggle","onClick","DropdownContext","noop","options","_useCallbackRef","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","_options","offset","_options$popperConfig","_options$usePopper","shouldUsePopper","handleClose","e","drop","setMenu","menuElement","toggleElement","menu","_usePopper","mergeOptionsWithPopperConfig","enabled","enableEvents","styles","attributes","popper","id","childArgs","arrowProps","arrow","useRootClose","clickTrigger","propTypes","PropTypes","func","isRequired","bool","oneOf","object","string","args","Fragment","_ref$show","_ref$toggle","setToggle","_useDropdownToggle$","componentName","matchesImpl","focusFirstItemOnShow","itemSelector","defaultShow","onToggle","Dropdown","rawShow","rawOnToggle","_ref$itemSelector","forceUpdate","_useUncontrolledProp","useUncontrolledProp","menuRef","useCallback","lastShow","lastSourceEvent","focusInDropdown","event","useMemo","contains","document","activeElement","focusToggle","useEventCallback","focus","maybeFocusFirst","focusType","node","body","nativeMatch","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","n","s","test","first","getNextFocusedChild","items","index","indexOf","Math","max","min","length","Provider","onKeyDown","key","target","tagName","next","preventDefault","_next","Menu","Toggle","DropdownItem","eventKey","onSelect","propActive","onSelectCtx","SelectableContext","activeKey","makeEventKey","handleClick","DropdownHeader","createWithBsPrefix","role","DropdownDivider","DropdownItemText","pProps","_useUncontrolled","useUncontrolled","_useUncontrolled$as","navbar","handleToggle","nextShow","source","currentTarget","handleSelect","BaseDropdown","dropdownProps","Divider","Header","Item","ItemText","String","createChainedFunction","_len","arguments","funcs","Array","_key","filter","f","reduce","acc","Error","_len2","_key2","apply","this","isTrivialHref","trim","stopPropagation","tabIndex"],"mappings":"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","file":"static/js/0.dafb585a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport usePopperMarginModifiers from './usePopperMarginModifiers';\nvar defaultProps = {\n  alignRight: false,\n  flip: true\n}; // TODO: remove this hack\n\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      showProps = _ref.show,\n      renderOnMount = _ref.renderOnMount,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      popperConfig = _ref.popperConfig,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"show\", \"renderOnMount\", \"as\", \"popperConfig\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _usePopperMarginModif = usePopperMarginModifiers(),\n      popperRef = _usePopperMarginModif[0],\n      marginModifiers = _usePopperMarginModif[1];\n\n  var _ref2 = useDropdownMenu({\n    flip: flip,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar,\n    popperConfig: _extends({}, popperConfig, {\n      modifiers: marginModifiers.concat((popperConfig == null ? void 0 : popperConfig.modifiers) || [])\n    })\n  }),\n      hasShown = _ref2.hasShown,\n      placement = _ref2.placement,\n      show = _ref2.show,\n      alignEnd = _ref2.alignEnd,\n      close = _ref2.close,\n      menuProps = _ref2.props;\n\n  menuProps.ref = useMergedRefs(popperRef, useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref));\n  if (!hasShown && !renderOnMount) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = close;\n    menuProps.alignRight = alignEnd;\n  }\n\n  if (placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    props.style = _extends({}, props.style, {}, menuProps.style);\n    props['x-placement'] = placement;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, menuProps, {\n    className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import React from 'react'; // TODO: check this\n\nvar NavContext = React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import React from 'react'; // TODO: check\n\nvar context = React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      children = _ref.children,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0],\n      toggle = _useDropdownToggle[1].toggle;\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props), children);\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import React from 'react';\nvar DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n\n  var _usePopper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  })),\n      styles = _usePopper.styles,\n      attributes = _usePopper.attributes,\n      popper = _objectWithoutPropertiesLoose(_usePopper, [\"styles\", \"attributes\"]);\n\n  var menu;\n  var menuProps = {\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, childArgs, {\n      props: _extends({}, menuProps, attributes.popper, {\n        style: styles.popper\n      }),\n      arrowProps: _extends({\n        ref: attachArrowRef\n      }, attributes.arrow, {\n        style: styles.arrow\n      })\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, args.hasShown ? children(args) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  return [{\n    ref: setToggle || noop,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      _useDropdownToggle$ = _useDropdownToggle[1],\n      show = _useDropdownToggle$.show,\n      toggle = _useDropdownToggle$.toggle;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    show: show,\n    toggle: toggle,\n    props: props\n  }));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","var matchesImpl;\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\n/**\n * @displayName Dropdown\n */\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n  var forceUpdate = useForceUpdate();\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1];\n\n  var _useCallbackRef = useCallbackRef(),\n      toggleElement = _useCallbackRef[0],\n      setToggle = _useCallbackRef[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var menuRef = useRef(null);\n  var menuElement = menuRef.current;\n  var setMenu = useCallback(function (ref) {\n    menuRef.current = ref; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (event) {\n    onToggle(!show, event);\n  }, [onToggle, show]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var key = event.key;\n    var target = event.target; // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && menuRef.current && menuRef.current.contains(target))) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          toggle(event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Escape':\n      case 'Tab':\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children({\n    props: {\n      onKeyDown: handleKeyDown\n    }\n  }));\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey || null, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    }), children)\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nvar DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nvar DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"]);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document) source = 'rootClose';\n\n    if (onToggle) {\n      onToggle(nextShow, event, {\n        source: source\n      });\n    }\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, function (_ref) {\n    var dropdownProps = _ref.props;\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, dropdownProps, {\n      ref: ref,\n      className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n    }));\n  }));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Divider = DropdownDivider;\nDropdown.Header = DropdownHeader;\nDropdown.Item = DropdownItem;\nDropdown.ItemText = DropdownItemText;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport createChainedFunction from './createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'a' : _ref$as,\n      disabled = _ref.disabled,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"disabled\", \"onKeyDown\"]);\n\n  var handleClick = function handleClick(event) {\n    var href = props.href,\n        onClick = props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  }));\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;"],"sourceRoot":""}